// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinhaAPI.Data;

#nullable disable

namespace MinhaAPI.Migrations
{
    [DbContext(typeof(LojaDbContext))]
    [Migration("20231022230038_MigracaoInicial")]
    partial class MigracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("MinhaAPI.Models.Carrinho", b =>
                {
                    b.Property<int>("IdCarrinho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCarrinho");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("MinhaAPI.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeCategoria")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("MinhaAPI.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CpfCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("MinhaAPI.Models.Estoque", b =>
                {
                    b.Property<int>("IdEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEstoque");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("MinhaAPI.Models.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeFuncionario")
                        .HasColumnType("TEXT");

                    b.Property<int>("setorIdSetor")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdFuncionario");

                    b.HasIndex("setorIdSetor");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("MinhaAPI.Models.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarrinhoIdCarrinho")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaIdCategoria")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EstoqueIdEstoque")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdProduto");

                    b.HasIndex("CarrinhoIdCarrinho");

                    b.HasIndex("CategoriaIdCategoria");

                    b.HasIndex("EstoqueIdEstoque");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MinhaAPI.Models.Setor", b =>
                {
                    b.Property<int>("IdSetor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeSetor")
                        .HasColumnType("TEXT");

                    b.HasKey("IdSetor");

                    b.ToTable("Setor");
                });

            modelBuilder.Entity("MinhaAPI.Models.Venda", b =>
                {
                    b.Property<int>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarrinhoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("TEXT");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("REAL");

                    b.HasKey("IdVenda");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("MinhaAPI.Models.Funcionario", b =>
                {
                    b.HasOne("MinhaAPI.Models.Setor", "setor")
                        .WithMany()
                        .HasForeignKey("setorIdSetor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("setor");
                });

            modelBuilder.Entity("MinhaAPI.Models.Produto", b =>
                {
                    b.HasOne("MinhaAPI.Models.Carrinho", null)
                        .WithMany("ItensCarrinho")
                        .HasForeignKey("CarrinhoIdCarrinho");

                    b.HasOne("MinhaAPI.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCategoria");

                    b.HasOne("MinhaAPI.Models.Estoque", null)
                        .WithMany("Produtos")
                        .HasForeignKey("EstoqueIdEstoque");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MinhaAPI.Models.Venda", b =>
                {
                    b.HasOne("MinhaAPI.Models.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhaAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MinhaAPI.Models.Carrinho", b =>
                {
                    b.Navigation("ItensCarrinho");
                });

            modelBuilder.Entity("MinhaAPI.Models.Estoque", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
